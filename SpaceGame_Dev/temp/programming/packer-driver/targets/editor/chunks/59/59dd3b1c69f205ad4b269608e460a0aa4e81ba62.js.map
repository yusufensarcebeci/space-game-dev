{"version":3,"sources":["file:///D:/CocosProjects/bionluk/muratcanko/SpaceGame/SpaceGame3D/assets/scripts/GameManager.ts"],"names":["_decorator","Component","Enum","EventTarget","ccclass","property","GameState","gameEventTarget","GameManager","type","onLoad","setState","LOADING","start","scheduleOnce","INIT","newState","currentState","handleStateChange","registerEvents","on","GAME_START","state","emit","GAME_RUNNING","GAME_OVER"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAYC,MAAAA,W,OAAAA,W;;;;;;;;;OAGtC;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;2BAElBM,S,0BAAAA,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;eAAAA,S;;;iCAOCC,e,GAAkB,IAAIJ,WAAJ,E;;6BAGlBK,W,WADZJ,OAAO,CAAC,aAAD,C,UAELC,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAEP,IAAI,CAACI,SAAD;AAAZ,OAAD,C,2BAFX,MACaE,WADb,SACiCP,SADjC,CAC2C;AAAA;AAAA;;AAAA;AAAA;;AAI/BS,QAAAA,MAAM,GAAS;AACvB,eAAKC,QAAL,CAAcL,SAAS,CAACM,OAAxB;AACD;;AAESC,QAAAA,KAAK,GAAS;AACtB,eAAKC,YAAL,CAAkB,MAAM;AACtB,iBAAKH,QAAL,CAAcL,SAAS,CAACS,IAAxB;AACD,WAFD,EAEG,CAFH;AAGD;;AAEDJ,QAAAA,QAAQ,CAACK,QAAD,EAAsB;AAC5B,eAAKC,YAAL,GAAoBD,QAApB;AACA,eAAKE,iBAAL,CAAuBF,QAAvB;AACD;;AAEDG,QAAAA,cAAc,GAAG;AACfZ,UAAAA,eAAe,CAACa,EAAhB,CAAmB,qBAAnB,EAA0C,MAAM;AAC9C,iBAAKT,QAAL,CAAcL,SAAS,CAACe,UAAxB;AACD,WAFD;AAGD;;AAEDH,QAAAA,iBAAiB,CAACI,KAAD,EAAmB;AAClC,kBAAQA,KAAR;AACE,iBAAKhB,SAAS,CAACM,OAAf;AACEL,cAAAA,eAAe,CAACgB,IAAhB,CAAqB,SAArB;AACA;;AACF,iBAAKjB,SAAS,CAACS,IAAf;AACER,cAAAA,eAAe,CAACgB,IAAhB,CAAqB,MAArB;AACA;;AACF,iBAAKjB,SAAS,CAACe,UAAf;AACEd,cAAAA,eAAe,CAACgB,IAAhB,CAAqB,YAArB;AACA;;AACF,iBAAKjB,SAAS,CAACkB,YAAf;AACEjB,cAAAA,eAAe,CAACgB,IAAhB,CAAqB,cAArB;AACA;;AACF,iBAAKjB,SAAS,CAACmB,SAAf;AACElB,cAAAA,eAAe,CAACgB,IAAhB,CAAqB,WAArB;AACA;AAfJ;AAiBD;;AA3CwC,O;;;;;iBAEfjB,SAAS,CAACM,O","sourcesContent":["import { _decorator, Component, Enum, Node, EventTarget } from \"cc\";\r\nimport { UIManager } from \"./UIManager\";\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\nexport enum GameState {\r\n  LOADING,\r\n  INIT,\r\n  GAME_START,\r\n  GAME_RUNNING,\r\n  GAME_OVER,\r\n}\r\nexport const gameEventTarget = new EventTarget();\r\n\r\n@ccclass(\"GameManager\")\r\nexport class GameManager extends Component {\r\n  @property({ type: Enum(GameState) })\r\n  currentState: GameState = GameState.LOADING;\r\n\r\n  protected onLoad(): void {\r\n    this.setState(GameState.LOADING);\r\n  }\r\n\r\n  protected start(): void {\r\n    this.scheduleOnce(() => {\r\n      this.setState(GameState.INIT);\r\n    }, 3);\r\n  }\r\n\r\n  setState(newState: GameState) {\r\n    this.currentState = newState;\r\n    this.handleStateChange(newState);\r\n  }\r\n\r\n  registerEvents() {\r\n    gameEventTarget.on(\"play_button_clicked\", () => {\r\n      this.setState(GameState.GAME_START);\r\n    });\r\n  }\r\n\r\n  handleStateChange(state: GameState) {\r\n    switch (state) {\r\n      case GameState.LOADING:\r\n        gameEventTarget.emit(\"loading\");\r\n        break;\r\n      case GameState.INIT:\r\n        gameEventTarget.emit(\"init\");\r\n        break;\r\n      case GameState.GAME_START:\r\n        gameEventTarget.emit(\"game_start\");\r\n        break;\r\n      case GameState.GAME_RUNNING:\r\n        gameEventTarget.emit(\"game_running\");\r\n        break;\r\n      case GameState.GAME_OVER:\r\n        gameEventTarget.emit(\"game_over\");\r\n        break;\r\n    }\r\n  }\r\n}\r\n"]}