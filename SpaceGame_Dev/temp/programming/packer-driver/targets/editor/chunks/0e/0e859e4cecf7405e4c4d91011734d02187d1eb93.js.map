{"version":3,"sources":["file:///D:/CocosProjects/bionluk/muratcanko/SpaceGame/SpaceGame3D/assets/scripts/SceneFrame.ts"],"names":["_decorator","Component","instantiate","Prefab","Vec3","GameManager","ccclass","property","SceneFrame","Number","tempVec3","framePool","positionZ","lastFrameZ","onLoad","initializeFramePool","spawnFrame","i","poolSize","frame","framePrefab","active","node","addChild","push","console","log","forEach","setPosition","zOffset","position","z","resetFrame","update","dt"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACEA,MAAAA,U,OAAAA,U;AACAC,MAAAA,S,OAAAA,S;AACAC,MAAAA,W,OAAAA,W;AAEAC,MAAAA,M,OAAAA,M;AAEAC,MAAAA,I,OAAAA,I;;AAEOC,MAAAA,W,iBAAAA,W;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;4BAGjBQ,U,WADZF,OAAO,CAAC,YAAD,C,UAELC,QAAQ;AAAA;AAAA,qC,UACRA,QAAQ,CAACJ,MAAD,C,UAERI,QAAQ,CAACE,MAAD,C,UACRF,QAAQ,CAACE,MAAD,C,UACRF,QAAQ,CAACE,MAAD,C,2BAPX,MACaD,UADb,SACgCP,SADhC,CAC0C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eAQhCS,QARgC,GAQf,IAAIN,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,CARe;AAAA,eAShCO,SATgC,GASZ,EATY;AAAA,eAUjCC,SAViC,GAUZ,CAVY;AAAA,eAWhCC,UAXgC,GAWX,CAXW;AAAA;;AAa9BC,QAAAA,MAAM,GAAS;AACvB,eAAKC,mBAAL;AACA,eAAKC,UAAL;AACD;;AAEOD,QAAAA,mBAAmB,GAAG;AAC5B,eAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,QAAzB,EAAmCD,CAAC,EAApC,EAAwC;AACtC,kBAAME,KAAK,GAAGjB,WAAW,CAAC,KAAKkB,WAAN,CAAzB;AACAD,YAAAA,KAAK,CAACE,MAAN,GAAe,IAAf;AACA,iBAAKC,IAAL,CAAUC,QAAV,CAAmBJ,KAAnB;AACA,iBAAKR,SAAL,CAAea,IAAf,CAAoBL,KAApB;AAED;;AACDM,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,SAAjB;AACD;;AAEOK,QAAAA,UAAU,GAAG;AACnB,eAAKL,SAAL,CAAegB,OAAf,CAAwBR,KAAD,IAAW;AAChCA,YAAAA,KAAK,CAACS,WAAN,CAAkB,IAAIxB,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,KAAKQ,SAApB,CAAlB;AACA,iBAAKA,SAAL,IAAkB,KAAKiB,OAAvB;AACA,iBAAKhB,UAAL,GAAkBM,KAAK,CAACW,QAAN,CAAeC,CAAjC;AACD,WAJD;AAKD;;AAEQC,QAAAA,UAAU,CAACb,KAAD,EAAc;AAC/BA,UAAAA,KAAK,CAACS,WAAN,CAAkB,IAAIxB,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAgB,KAAKS,UAArB,CAAlB,EAD+B,CAE/B;AACD;;AAGSoB,QAAAA,MAAM,CAACC,EAAD,EAAmB,CACjC;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACD;;AAxDuC,O;;;;;iBACU,I;;;;;;;iBACV,I;;;;;;;iBAEH,G;;;;;;;iBACD,C;;;;;;;iBACE,E","sourcesContent":["import {\r\n  _decorator,\r\n  Component,\r\n  instantiate,\r\n  Node,\r\n  Prefab,\r\n  Vec2,\r\n  Vec3,\r\n} from \"cc\";\r\nimport { GameManager,GameState } from \"./GameManager\";\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass(\"SceneFrame\")\r\nexport class SceneFrame extends Component {\r\n  @property(GameManager) gameManager: GameManager = null;\r\n  @property(Prefab) framePrefab: Prefab = null;\r\n\r\n  @property(Number) poolSize: number = 100;\r\n  @property(Number) zOffset: number = 5;\r\n  @property(Number) moveSpeed: number = 30;\r\n\r\n  private tempVec3: Vec3 = new Vec3(0, 0, 0);\r\n  private framePool: Node[] = [];\r\n  public positionZ : number = 0;\r\n  private lastFrameZ: number = 0;\r\n\r\n  protected onLoad(): void {\r\n    this.initializeFramePool();\r\n    this.spawnFrame();\r\n  }\r\n\r\n  private initializeFramePool() {\r\n    for (let i = 0; i < this.poolSize; i++) {\r\n      const frame = instantiate(this.framePrefab);\r\n      frame.active = true;\r\n      this.node.addChild(frame);\r\n      this.framePool.push(frame);\r\n      \r\n    }\r\n    console.log(this.framePool);\r\n  }\r\n\r\n  private spawnFrame() {\r\n    this.framePool.forEach((frame) => {\r\n      frame.setPosition(new Vec3(0, 0, this.positionZ));\r\n      this.positionZ -= this.zOffset;\r\n      this.lastFrameZ = frame.position.z;\r\n    });\r\n  }\r\n\r\n  private  resetFrame(frame : Node){\r\n    frame.setPosition(new Vec3(0, 0,  this.lastFrameZ));\r\n    // this.positionZ -= this.zOffset;\r\n  }\r\n\r\n\r\n  protected update(dt: number): void {\r\n    // if (this.gameManager && this.gameManager.currentState === GameState.GAME_START) {\r\n    //     this.framePool.forEach((frame) => {\r\n    //       const position = frame.getPosition();\r\n    //       position.z += this.moveSpeed * dt;\r\n    //       frame.setPosition(position);\r\n  \r\n    //       if (position.z > 0) {\r\n    //         this.resetFrame(frame) \r\n            \r\n    //       }\r\n    //     });\r\n    //   }\r\n  }\r\n}\r\n"]}