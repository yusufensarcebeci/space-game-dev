{"version":3,"sources":["file:///D:/CocosProjects/bionluk/muratcanko/SpaceGame/SpaceGame3D/assets/scripts/SceneFrame.ts"],"names":["_decorator","Component","instantiate","Prefab","Vec3","GameManager","ccclass","property","SceneFrame","Number","framePool","onLoad","initializeFramePool","spawnAllFrame","i","poolSize","frame","framePrefab","active","node","addChild","push","positionZ","forEach","setPosition","zOffset","console","log","length","resetFrame","newPositionZ","getFarthestFrameZ","Math","min","map","getPosition","z","update","dt"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACIA,MAAAA,U,OAAAA,U;AACAC,MAAAA,S,OAAAA,S;AACAC,MAAAA,W,OAAAA,W;AAEAC,MAAAA,M,OAAAA,M;AACAC,MAAAA,I,OAAAA,I;;AAEOC,MAAAA,W,iBAAAA,W;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;4BAGjBQ,U,WADZF,OAAO,CAAC,YAAD,C,UAELC,QAAQ;AAAA;AAAA,qC,UACRA,QAAQ,CAACJ,MAAD,C,UAERI,QAAQ,CAACE,MAAD,C,UACRF,QAAQ,CAACE,MAAD,C,UACRF,QAAQ,CAACE,MAAD,C,2BAPX,MACaD,UADb,SACgCP,SADhC,CAC0C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eAQhCS,SARgC,GAQZ,EARY;AAAA;;AAU9BC,QAAAA,MAAM,GAAS;AACvB,eAAKC,mBAAL;AACA,eAAKC,aAAL;AACD;;AAEOD,QAAAA,mBAAmB,GAAG;AAC5B,eAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,QAAzB,EAAmCD,CAAC,EAApC,EAAwC;AACtC,kBAAME,KAAK,GAAGd,WAAW,CAAC,KAAKe,WAAN,CAAzB;AACAD,YAAAA,KAAK,CAACE,MAAN,GAAe,IAAf;AACA,iBAAKC,IAAL,CAAUC,QAAV,CAAmBJ,KAAnB;AACA,iBAAKN,SAAL,CAAeW,IAAf,CAAoBL,KAApB;AACD;AACF;;AAEOH,QAAAA,aAAa,GAAG;AACtB,cAAIS,SAAS,GAAG,CAAC,EAAjB;AACA,eAAKZ,SAAL,CAAea,OAAf,CAAwBP,KAAD,IAAW;AAChCA,YAAAA,KAAK,CAACQ,WAAN,CAAkB,IAAIpB,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAekB,SAAf,CAAlB;AACAA,YAAAA,SAAS,IAAI,KAAKG,OAAlB;AACD,WAHD;AAIAC,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,SAAL,CAAekB,MAA3B;AACD;;AAEOC,QAAAA,UAAU,CAACb,KAAD,EAAc;AAC9B,gBAAMc,YAAY,GAAG,KAAKC,iBAAL,KAA2B,KAAKN,OAArD;AACAT,UAAAA,KAAK,CAACQ,WAAN,CAAkB,IAAIpB,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe0B,YAAf,CAAlB;AACD;;AAEOC,QAAAA,iBAAiB,GAAW;AAClC,iBAAOC,IAAI,CAACC,GAAL,CAAS,GAAG,KAAKvB,SAAL,CAAewB,GAAf,CAAoBlB,KAAD,IAAWA,KAAK,CAACmB,WAAN,GAAoBC,CAAlD,CAAZ,CAAP;AACD;;AAESC,QAAAA,MAAM,CAACC,EAAD,EAAmB,CACnC;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACC;;AAtDuC,O;;;;;iBACU,I;;;;;;;iBACV,I;;;;;;;iBAEH,C;;;;;;;iBACD,C;;;;;;;iBACE,C","sourcesContent":["import {\r\n    _decorator,\r\n    Component,\r\n    instantiate,\r\n    Node,\r\n    Prefab,\r\n    Vec3,\r\n  } from \"cc\";\r\n  import { GameManager, GameState } from \"./GameManager\";\r\n  const { ccclass, property } = _decorator;\r\n  \r\n  @ccclass(\"SceneFrame\")\r\n  export class SceneFrame extends Component {\r\n    @property(GameManager) gameManager: GameManager = null;\r\n    @property(Prefab) framePrefab: Prefab = null;\r\n  \r\n    @property(Number) poolSize: number = 0;\r\n    @property(Number) zOffset: number = 0;\r\n    @property(Number) moveSpeed: number = 0;\r\n  \r\n    private framePool: Node[] = [];\r\n  \r\n    protected onLoad(): void {\r\n      this.initializeFramePool();\r\n      this.spawnAllFrame();\r\n    }\r\n  \r\n    private initializeFramePool() {\r\n      for (let i = 0; i < this.poolSize; i++) {\r\n        const frame = instantiate(this.framePrefab);\r\n        frame.active = true;\r\n        this.node.addChild(frame);\r\n        this.framePool.push(frame);\r\n      }\r\n    }\r\n  \r\n    private spawnAllFrame() {\r\n      let positionZ = -20;\r\n      this.framePool.forEach((frame) => {\r\n        frame.setPosition(new Vec3(0, 0, positionZ));\r\n        positionZ -= this.zOffset;\r\n      });\r\n      console.log(this.framePool.length); \r\n    }\r\n  \r\n    private resetFrame(frame: Node) {\r\n      const newPositionZ = this.getFarthestFrameZ() - this.zOffset; \r\n      frame.setPosition(new Vec3(0, 0, newPositionZ));\r\n    }\r\n  \r\n    private getFarthestFrameZ(): number {\r\n      return Math.min(...this.framePool.map((frame) => frame.getPosition().z));\r\n    }\r\n  \r\n    protected update(dt: number): void {\r\n    //   if (this.gameManager && this.gameManager.currentState === GameState.GAME_START) {\r\n    //     this.framePool.forEach((frame) => {\r\n    //       const position = frame.getPosition();\r\n    //       position.z += this.moveSpeed * dt;\r\n    //       frame.setPosition(position);\r\n  \r\n    //       if (position.z > 0) {\r\n    //         this.resetFrame(frame);  \r\n    //       }\r\n    //     });\r\n    //   }\r\n    }\r\n  }\r\n  "]}