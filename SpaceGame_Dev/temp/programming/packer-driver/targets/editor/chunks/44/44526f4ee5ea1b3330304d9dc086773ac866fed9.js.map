{"version":3,"sources":["file:///D:/CocosProjects/bionluk/muratcanko/SpaceGame/SpaceGame3D/assets/scripts/EnemyManager.ts"],"names":["_decorator","Component","instantiate","Prefab","randomRange","Vec3","GameManager","GameState","ccclass","property","EnemyManager","Number","initialPosZ","spawnDepth","enemyPool","onLoad","initializeEnemyPool","spawnAllEnemies","i","poolSize","enemy","enemyPrefab","active","node","addChild","push","positionZ","forEach","spawnPos","spawnRangeX","spawnRangeY","setPosition","zOffset","resetEnemy","getFarthestEnemyZ","Math","min","map","getPosition","z","resetEnemyPool","update","dt","gameManager","currentState","GAME_RUNNING","position","moveSpeed","difficultyMultiplier"],"mappings":"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","sourcesContent":["import {\r\n  _decorator,\r\n  Component,\r\n  instantiate,\r\n  Node,\r\n  Prefab,\r\n  randomRange,\r\n  Vec3,\r\n} from \"cc\";\r\nimport { GameManager, GameState } from \"./GameManager\";\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass(\"EnemyManager\")\r\nexport class EnemyManager extends Component {\r\n  @property(GameManager) gameManager: GameManager = null;\r\n  @property(Prefab) enemyPrefab: Prefab = null;\r\n  @property(Number) poolSize: number = 10;\r\n  @property(Number) spawnRangeX: number = 1;\r\n  @property(Number) spawnRangeY: number = 1;\r\n  @property(Number) zOffset: number = 10;\r\n  @property(Number) moveSpeed: number = 20;\r\n\r\n  initialPosZ: number = -40;\r\n  spawnDepth: number = 0;\r\n\r\n  private enemyPool: Node[] = [];\r\n\r\n  protected onLoad(): void {\r\n    this.initializeEnemyPool();\r\n    this.spawnAllEnemies();\r\n  }\r\n\r\n  private initializeEnemyPool() {\r\n    for (let i = 0; i < this.poolSize; i++) {\r\n      const enemy = instantiate(this.enemyPrefab);\r\n      enemy.active = true;\r\n      this.node.addChild(enemy);\r\n      this.enemyPool.push(enemy);\r\n    }\r\n  }\r\n\r\n  private spawnAllEnemies() {\r\n    let positionZ = this.initialPosZ;\r\n    this.enemyPool.forEach((enemy) => {\r\n      const spawnPos = new Vec3(\r\n        randomRange(-this.spawnRangeX, this.spawnRangeX),\r\n        randomRange(-this.spawnRangeY, this.spawnRangeY),\r\n        positionZ\r\n      );\r\n      enemy.setPosition(spawnPos);\r\n      positionZ -= this.zOffset;\r\n    });\r\n  }\r\n\r\n  private resetEnemy(enemy: Node) {\r\n    // const newPositionZ = this.getFarthestEnemyZ() - this.zOffset;\r\n    const spawnPos = new Vec3(\r\n      randomRange(-this.spawnRangeX, this.spawnRangeX),\r\n      randomRange(-this.spawnRangeY, this.spawnRangeY),\r\n      this.getFarthestEnemyZ() - this.zOffset\r\n    );\r\n    enemy.setPosition(new Vec3(spawnPos));\r\n  }\r\n\r\n  private getFarthestEnemyZ(): number {\r\n    return Math.min(...this.enemyPool.map((enemy) => enemy.getPosition().z));\r\n  }\r\n\r\n  public resetEnemyPool(){\r\n    this.spawnAllEnemies();\r\n  }\r\n\r\n  update(dt: number) {\r\n    if (\r\n      !this.gameManager ||\r\n      this.gameManager.currentState != GameState.GAME_RUNNING\r\n    )\r\n      return;\r\n\r\n    this.enemyPool.forEach((enemy) => {\r\n      const position = enemy.getPosition();\r\n      position.z += this.moveSpeed * dt * this.gameManager.difficultyMultiplier;\r\n      enemy.setPosition(position);\r\n\r\n      if (position.z > 5 ) {\r\n        this.resetEnemy(enemy);\r\n      }\r\n    });\r\n  }\r\n}\r\n"]}