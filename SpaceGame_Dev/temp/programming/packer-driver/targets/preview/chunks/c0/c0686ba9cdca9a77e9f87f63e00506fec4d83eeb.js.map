{"version":3,"sources":["file:///D:/CocosProjects/bionluk/muratcanko/SpaceGame/SpaceGame3D/assets/scripts/SceneFrame.ts"],"names":["_decorator","Component","instantiate","Prefab","Vec3","GameManager","GameState","ccclass","property","SceneFrame","Number","initialPosZ","framePool","onLoad","initializeFramePool","spawnAllFrames","i","poolSize","frame","framePrefab","active","node","addChild","push","positionZ","forEach","setPosition","zOffset","resetFrame","newPositionZ","getFarthestFrameZ","Math","min","map","getPosition","z","resetFramePool","update","dt","gameManager","currentState","GAME_RUNNING","position","moveSpeed","difficultyMultiplier"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,W,OAAAA,W;AAAmBC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,I,OAAAA,I;;AAClDC,MAAAA,W,iBAAAA,W;AAAaC,MAAAA,S,iBAAAA,S;;;;;;;;;OAChB;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBR,U;;4BAGjBS,U,WADZF,OAAO,CAAC,YAAD,C,UAELC,QAAQ;AAAA;AAAA,qC,UACRA,QAAQ,CAACL,MAAD,C,UAERK,QAAQ,CAACE,MAAD,C,UACRF,QAAQ,CAACE,MAAD,C,UACRF,QAAQ,CAACE,MAAD,C,2BAPX,MACaD,UADb,SACgCR,SADhC,CAC0C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eAQxCU,WARwC,GAQlB,CAAC,EARiB;AAAA,eAUhCC,SAVgC,GAUZ,EAVY;AAAA;;AAY9BC,QAAAA,MAAM,GAAS;AACvB,eAAKC,mBAAL;AACA,eAAKC,cAAL;AACD;;AAEOD,QAAAA,mBAAmB,GAAG;AAC5B,eAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,QAAzB,EAAmCD,CAAC,EAApC,EAAwC;AACtC,gBAAME,KAAK,GAAGhB,WAAW,CAAC,KAAKiB,WAAN,CAAzB;AACAD,YAAAA,KAAK,CAACE,MAAN,GAAe,IAAf;AACA,iBAAKC,IAAL,CAAUC,QAAV,CAAmBJ,KAAnB;AACA,iBAAKN,SAAL,CAAeW,IAAf,CAAoBL,KAApB;AACD;AACF;;AAEOH,QAAAA,cAAc,GAAG;AACvB,cAAIS,SAAS,GAAG,KAAKb,WAArB;AACA,eAAKC,SAAL,CAAea,OAAf,CAAwBP,KAAD,IAAW;AAChCA,YAAAA,KAAK,CAACQ,WAAN,CAAkB,IAAItB,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAeoB,SAAf,CAAlB;AACAA,YAAAA,SAAS,IAAI,KAAKG,OAAlB;AACD,WAHD;AAID;;AAEOC,QAAAA,UAAU,CAACV,KAAD,EAAc;AAC9B,cAAMW,YAAY,GAAG,KAAKC,iBAAL,KAA2B,KAAKH,OAArD;AACAT,UAAAA,KAAK,CAACQ,WAAN,CAAkB,IAAItB,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAeyB,YAAf,CAAlB;AACD;;AAEOC,QAAAA,iBAAiB,GAAW;AAClC,iBAAOC,IAAI,CAACC,GAAL,CAAS,GAAG,KAAKpB,SAAL,CAAeqB,GAAf,CAAoBf,KAAD,IAAWA,KAAK,CAACgB,WAAN,GAAoBC,CAAlD,CAAZ,CAAP;AACD;;AAEMC,QAAAA,cAAc,GAAE;AACrB,eAAKrB,cAAL;AACD;;AAESsB,QAAAA,MAAM,CAACC,EAAD,EAAmB;AACjC,cACE,CAAC,KAAKC,WAAN,IACA,KAAKA,WAAL,CAAiBC,YAAjB,IAAiC;AAAA;AAAA,sCAAUC,YAF7C,EAIE;AACF,eAAK7B,SAAL,CAAea,OAAf,CAAwBP,KAAD,IAAW;AAChC,gBAAMwB,QAAQ,GAAGxB,KAAK,CAACgB,WAAN,EAAjB;AACAQ,YAAAA,QAAQ,CAACP,CAAT,IAAc,KAAKQ,SAAL,GAAiBL,EAAjB,GAAsB,KAAKC,WAAL,CAAiBK,oBAArD;AACA1B,YAAAA,KAAK,CAACQ,WAAN,CAAkBgB,QAAlB;;AAEA,gBAAIA,QAAQ,CAACP,CAAT,GAAa,CAAjB,EAAoB;AAClB,mBAAKP,UAAL,CAAgBV,KAAhB;AACD;AACF,WARD;AASD;;AA9DuC,O;;;;;iBACU,I;;;;;;;iBACV,I;;;;;;;iBAEH,C;;;;;;;iBACD,C;;;;;;;iBACE,C","sourcesContent":["import { _decorator, Component, instantiate, Node, Prefab, Vec3 } from \"cc\";\r\nimport { GameManager, GameState } from \"./GameManager\";\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass(\"SceneFrame\")\r\nexport class SceneFrame extends Component {\r\n  @property(GameManager) gameManager: GameManager = null;\r\n  @property(Prefab) framePrefab: Prefab = null;\r\n\r\n  @property(Number) poolSize: number = 0;\r\n  @property(Number) zOffset: number = 0;\r\n  @property(Number) moveSpeed: number = 0;\r\n\r\n  initialPosZ: number = -10;\r\n\r\n  private framePool: Node[] = [];\r\n\r\n  protected onLoad(): void {\r\n    this.initializeFramePool();\r\n    this.spawnAllFrames();\r\n  }\r\n\r\n  private initializeFramePool() {\r\n    for (let i = 0; i < this.poolSize; i++) {\r\n      const frame = instantiate(this.framePrefab);\r\n      frame.active = true;\r\n      this.node.addChild(frame);\r\n      this.framePool.push(frame);\r\n    }\r\n  }\r\n\r\n  private spawnAllFrames() {\r\n    let positionZ = this.initialPosZ;\r\n    this.framePool.forEach((frame) => {\r\n      frame.setPosition(new Vec3(0, 0, positionZ));\r\n      positionZ -= this.zOffset;\r\n    });\r\n  }\r\n\r\n  private resetFrame(frame: Node) {\r\n    const newPositionZ = this.getFarthestFrameZ() - this.zOffset;\r\n    frame.setPosition(new Vec3(0, 0, newPositionZ));\r\n  }\r\n\r\n  private getFarthestFrameZ(): number {\r\n    return Math.min(...this.framePool.map((frame) => frame.getPosition().z));\r\n  }\r\n\r\n  public resetFramePool(){\r\n    this.spawnAllFrames();\r\n  }\r\n\r\n  protected update(dt: number): void {\r\n    if (\r\n      !this.gameManager ||\r\n      this.gameManager.currentState != GameState.GAME_RUNNING\r\n    )\r\n      return;\r\n    this.framePool.forEach((frame) => {\r\n      const position = frame.getPosition();\r\n      position.z += this.moveSpeed * dt * this.gameManager.difficultyMultiplier;\r\n      frame.setPosition(position);\r\n\r\n      if (position.z > 5) {\r\n        this.resetFrame(frame);\r\n      }\r\n    });\r\n  }\r\n}\r\n"]}