{"version":3,"sources":["file:///D:/CocosProjects/bionluk/muratcanko/SpaceGame/SpaceGame3D/assets/scripts/EnemyManager.ts"],"names":["_decorator","Component","instantiate","Prefab","randomRange","Vec3","GameManager","ccclass","property","EnemyManager","Number","activeEnemies","Set","spawnDepth","enemyPool","onLoad","initializeEnemyPool","spawnEnemy","i","poolSize","enemy","enemyPrefab","active","node","addChild","push","console","log","getEnemyFromPool","spawnPos","spawnRangeX","spawnRangeY","setPosition","add","returnEnemyToPool","delete","update","dt","gameManager","GE","forEach","position","getPosition","z","moveSpeed"],"mappings":"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","sourcesContent":["import {\r\n  _decorator,\r\n  Component,\r\n  instantiate,\r\n  Node,\r\n  Prefab,\r\n  randomRange,\r\n  Vec3,\r\n} from \"cc\";\r\nimport { GameManager } from \"./GameManager\";\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass(\"EnemyManager\")\r\nexport class EnemyManager extends Component {\r\n  @property(GameManager) gameManager: GameManager = null;\r\n\r\n  @property(Prefab) enemyPrefab: Prefab = null;\r\n  @property(Number) poolSize: number = 10;\r\n  @property(Number) spawnRangeX: number = 1;\r\n  @property(Number) spawnRangeY: number = 1;\r\n  @property(Number) moveSpeed: number = 1;\r\n\r\n  activeEnemies: Set<Node> = new Set();\r\n  spawnDepth: number = 0;\r\n\r\n  private enemyPool: Node[] = [];\r\n\r\n  protected onLoad(): void {\r\n    this.initializeEnemyPool();\r\n    this.spawnEnemy();\r\n  }\r\n\r\n  private initializeEnemyPool() {\r\n    for (let i = 0; i < this.poolSize; i++) {\r\n      const enemy = instantiate(this.enemyPrefab);\r\n      enemy.active = false;\r\n      this.node.addChild(enemy);\r\n      this.enemyPool.push(enemy);\r\n    }\r\n    console.log(this.enemyPool);\r\n  }\r\n\r\n  private getEnemyFromPool(): Node | null {\r\n    for (const enemy of this.enemyPool) {\r\n      if (!enemy.active) {\r\n        return enemy;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  spawnEnemy() {\r\n    const enemy = this.getEnemyFromPool();\r\n    if (!enemy) return;\r\n\r\n    const spawnPos = new Vec3(\r\n      randomRange(-this.spawnRangeX, this.spawnRangeX),\r\n      randomRange(-this.spawnRangeY, this.spawnRangeY),\r\n      this.spawnDepth\r\n    );\r\n    enemy.setPosition(spawnPos);\r\n    enemy.active = true;\r\n    this.activeEnemies.add(enemy);\r\n    console.log(enemy);\r\n  }\r\n  returnEnemyToPool(enemy: Node) {\r\n    enemy.active = false;\r\n    this.activeEnemies.delete(enemy);\r\n    this.enemyPool.push(enemy);\r\n  }\r\n\r\n  update(dt: number) {\r\n    if (this.gameManager.GE)\r\n      this.activeEnemies.forEach((enemy) => {\r\n        const position = enemy.getPosition();\r\n        position.z += this.moveSpeed * dt; \r\n        enemy.setPosition(position);\r\n\r\n        // Düşman belirli bir noktayı geçerse, pool'a geri dön\r\n        // if (position.z > someThreshold) {  // 'someThreshold' karaktere göre ayarlanmalı\r\n        //   this.returnEnemyToPool(enemy);\r\n        // }\r\n      });\r\n  }\r\n}\r\n"]}