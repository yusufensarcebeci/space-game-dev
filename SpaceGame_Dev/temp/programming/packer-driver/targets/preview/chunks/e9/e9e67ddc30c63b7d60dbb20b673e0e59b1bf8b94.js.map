{"version":3,"sources":["file:///D:/CocosProjects/bionluk/muratcanko/SpaceGame/SpaceGame3D/assets/scripts/ScoreHandler.ts"],"names":["_decorator","Component","Label","Node","ccclass","property","ScoreHandler","Number","elapsedTime","update","dt","incrementInterval","incrementScore","score","console","log","getScore","updateScoreLabel","scoreLabel","label","getComponent","string"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,I,OAAAA,I;;;;;;;;;OACjC;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;8BAGjBM,Y,WADZF,OAAO,CAAC,cAAD,C,UAEHC,QAAQ,CAACF,IAAD,C,UACVE,QAAQ,CAACE,MAAD,C,UACRF,QAAQ,CAACE,MAAD,C,2BAJX,MACaD,YADb,SACkCL,SADlC,CAC4C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAGO;AAHP,eAKlCO,WALkC,GAKZ,CALY;AAAA;;AAOhCC,QAAAA,MAAM,CAACC,EAAD,EAAa;AAC3B,eAAKF,WAAL,IAAoBE,EAApB;;AACA,cAAI,KAAKF,WAAL,IAAoB,KAAKG,iBAA7B,EAAgD;AAC9C,iBAAKH,WAAL,IAAoB,KAAKG,iBAAzB;AACA,iBAAKC,cAAL;AACD;AACF;;AAEOA,QAAAA,cAAc,GAAG;AACvB,eAAKC,KAAL,IAAc,CAAd;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB,KAAKF,KAA5B;AACD;;AAEMG,QAAAA,QAAQ,GAAG;AAChB,iBAAO,KAAKH,KAAZ;AACD;;AAEOI,QAAAA,gBAAgB,GAAG;AACzB,cAAI,KAAKC,UAAT,EAAqB;AACnB,gBAAMC,KAAK,GAAG,KAAKD,UAAL,CAAgBE,YAAhB,CAA6BlB,KAA7B,CAAd;;AACA,gBAAIiB,KAAJ,EAAW;AACTA,cAAAA,KAAK,CAACE,MAAN,QAAkB,KAAKR,KAAvB;AACD;AACF;AACF,SA/ByC,CAiC1C;AACA;AACA;;;AAnC0C,O;;;;;iBACL,I;;;;;;;iBACH,C;;;;;;;iBACY,C","sourcesContent":["import { _decorator, Component, Label, Node } from \"cc\";\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass(\"ScoreHandler\")\r\nexport class ScoreHandler extends Component {\r\n    @property(Node) scoreLabel: Node = null; \r\n  @property(Number) score: number = 0;\r\n  @property(Number) incrementInterval: number = 1; // İncrement aralığı (saniye)\r\n\r\n  private elapsedTime: number = 0;\r\n\r\n  protected update(dt: number) {\r\n    this.elapsedTime += dt;\r\n    if (this.elapsedTime >= this.incrementInterval) {\r\n      this.elapsedTime -= this.incrementInterval; \r\n      this.incrementScore();\r\n    }\r\n  }\r\n\r\n  private incrementScore() {\r\n    this.score += 1;\r\n    console.log(\"Score: \", this.score); \r\n  }\r\n\r\n  public getScore() {\r\n    return this.score;\r\n  }\r\n\r\n  private updateScoreLabel() {\r\n    if (this.scoreLabel) {\r\n      const label = this.scoreLabel.getComponent(Label);\r\n      if (label) {\r\n        label.string = `${this.score}`;\r\n      }\r\n    }\r\n  }\r\n\r\n  //   public addScore(currentscore: number, value: number) {\r\n  //     return (currentscore += value);\r\n  //   }\r\n}\r\n"]}