{"version":3,"sources":["file:///D:/CocosProjects/bionluk/muratcanko/SpaceGame/SpaceGame3D/assets/scripts/SceneFrame.ts"],"names":["_decorator","Component","instantiate","Prefab","Vec3","GameManager","GameState","ccclass","property","SceneFrame","Number","framePool","maxZ","onLoad","initializeFramePool","spawnFrame","i","poolSize","frame","framePrefab","active","node","addChild","push","positionZ","forEach","setPosition","zOffset","Math","abs","resetFrame","newPositionZ","getFarthestFrameZ","min","map","getPosition","z","update","dt","gameManager","currentState","GAME_START","position","moveSpeed"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACIA,MAAAA,U,OAAAA,U;AACAC,MAAAA,S,OAAAA,S;AACAC,MAAAA,W,OAAAA,W;AAEAC,MAAAA,M,OAAAA,M;AACAC,MAAAA,I,OAAAA,I;;AAEOC,MAAAA,W,iBAAAA,W;AAAaC,MAAAA,S,iBAAAA,S;;;;;;;;;OAChB;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBR,U;;4BAGjBS,U,WADZF,OAAO,CAAC,YAAD,C,UAELC,QAAQ;AAAA;AAAA,qC,UACRA,QAAQ,CAACL,MAAD,C,UAERK,QAAQ,CAACE,MAAD,C,UACRF,QAAQ,CAACE,MAAD,C,UACRF,QAAQ,CAACE,MAAD,C,2BAPX,MACaD,UADb,SACgCR,SADhC,CAC0C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eAQhCU,SARgC,GAQZ,EARY;AAAA,eAShCC,IATgC;AAAA;;AAW9BC,QAAAA,MAAM,GAAS;AACvB,eAAKC,mBAAL;AACA,eAAKC,UAAL;AACD;;AAEOD,QAAAA,mBAAmB,GAAG;AAC5B,eAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,QAAzB,EAAmCD,CAAC,EAApC,EAAwC;AACtC,gBAAME,KAAK,GAAGhB,WAAW,CAAC,KAAKiB,WAAN,CAAzB;AACAD,YAAAA,KAAK,CAACE,MAAN,GAAe,IAAf;AACA,iBAAKC,IAAL,CAAUC,QAAV,CAAmBJ,KAAnB;AACA,iBAAKP,SAAL,CAAeY,IAAf,CAAoBL,KAApB;AACD;AACF;;AAEOH,QAAAA,UAAU,GAAG;AACnB,cAAIS,SAAS,GAAG,CAAhB;AACA,eAAKb,SAAL,CAAec,OAAf,CAAwBP,KAAD,IAAW;AAChCA,YAAAA,KAAK,CAACQ,WAAN,CAAkB,IAAItB,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAeoB,SAAf,CAAlB;AACAA,YAAAA,SAAS,IAAI,KAAKG,OAAlB;AACD,WAHD;AAIA,eAAKf,IAAL,GAAYgB,IAAI,CAACC,GAAL,CAASL,SAAT,CAAZ,CANmB,CAMe;AACnC;;AAEOM,QAAAA,UAAU,CAACZ,KAAD,EAAc;AAC9B,cAAMa,YAAY,GAAG,KAAKC,iBAAL,KAA2B,KAAKL,OAArD,CAD8B,CACgC;;AAC9DT,UAAAA,KAAK,CAACQ,WAAN,CAAkB,IAAItB,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe2B,YAAf,CAAlB;AACD;;AAEOC,QAAAA,iBAAiB,GAAW;AAClC;AACA,iBAAOJ,IAAI,CAACK,GAAL,CAAS,GAAG,KAAKtB,SAAL,CAAeuB,GAAf,CAAoBhB,KAAD,IAAWA,KAAK,CAACiB,WAAN,GAAoBC,CAAlD,CAAZ,CAAP;AACD;;AAESC,QAAAA,MAAM,CAACC,EAAD,EAAmB;AACjC,cAAI,KAAKC,WAAL,IAAoB,KAAKA,WAAL,CAAiBC,YAAjB,KAAkC;AAAA;AAAA,sCAAUC,UAApE,EAAgF;AAC9E,iBAAK9B,SAAL,CAAec,OAAf,CAAwBP,KAAD,IAAW;AAChC,kBAAMwB,QAAQ,GAAGxB,KAAK,CAACiB,WAAN,EAAjB;AACAO,cAAAA,QAAQ,CAACN,CAAT,IAAc,KAAKO,SAAL,GAAiBL,EAA/B;AACApB,cAAAA,KAAK,CAACQ,WAAN,CAAkBgB,QAAlB;;AAEA,kBAAIA,QAAQ,CAACN,CAAT,GAAa,CAAjB,EAAoB;AAClB,qBAAKN,UAAL,CAAgBZ,KAAhB,EADkB,CACO;AAC1B;AACF,aARD;AASD;AACF;;AAxDuC,O;;;;;iBACU,I;;;;;;;iBACV,I;;;;;;;iBAEH,G;;;;;;;iBACD,C;;;;;;;iBACE,E","sourcesContent":["import {\r\n    _decorator,\r\n    Component,\r\n    instantiate,\r\n    Node,\r\n    Prefab,\r\n    Vec3,\r\n  } from \"cc\";\r\n  import { GameManager, GameState } from \"./GameManager\";\r\n  const { ccclass, property } = _decorator;\r\n  \r\n  @ccclass(\"SceneFrame\")\r\n  export class SceneFrame extends Component {\r\n    @property(GameManager) gameManager: GameManager = null;\r\n    @property(Prefab) framePrefab: Prefab = null;\r\n  \r\n    @property(Number) poolSize: number = 100;\r\n    @property(Number) zOffset: number = 5;\r\n    @property(Number) moveSpeed: number = 30;\r\n  \r\n    private framePool: Node[] = [];\r\n    private maxZ: number;\r\n  \r\n    protected onLoad(): void {\r\n      this.initializeFramePool();\r\n      this.spawnFrame();\r\n    }\r\n  \r\n    private initializeFramePool() {\r\n      for (let i = 0; i < this.poolSize; i++) {\r\n        const frame = instantiate(this.framePrefab);\r\n        frame.active = true;\r\n        this.node.addChild(frame);\r\n        this.framePool.push(frame);\r\n      }\r\n    }\r\n  \r\n    private spawnFrame() {\r\n      let positionZ = 0;\r\n      this.framePool.forEach((frame) => {\r\n        frame.setPosition(new Vec3(0, 0, positionZ));\r\n        positionZ -= this.zOffset;\r\n      });\r\n      this.maxZ = Math.abs(positionZ);  // En büyük negatif Z değeri (frame'lerin en arkadaki pozisyonu)\r\n    }\r\n  \r\n    private resetFrame(frame: Node) {\r\n      const newPositionZ = this.getFarthestFrameZ() - this.zOffset; // En uzak frame'in Z pozisyonunu referans alarak yeni pozisyonu belirle\r\n      frame.setPosition(new Vec3(0, 0, newPositionZ));\r\n    }\r\n  \r\n    private getFarthestFrameZ(): number {\r\n      // Sahnedeki en uzak frame'in Z pozisyonunu bulur\r\n      return Math.min(...this.framePool.map((frame) => frame.getPosition().z));\r\n    }\r\n  \r\n    protected update(dt: number): void {\r\n      if (this.gameManager && this.gameManager.currentState === GameState.GAME_START) {\r\n        this.framePool.forEach((frame) => {\r\n          const position = frame.getPosition();\r\n          position.z += this.moveSpeed * dt;\r\n          frame.setPosition(position);\r\n  \r\n          if (position.z > 0) {\r\n            this.resetFrame(frame);  // Frame'i sahnenin en gerisine resetle\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n  "]}