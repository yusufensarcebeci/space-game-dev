{"version":3,"sources":["file:///D:/CocosProjects/bionluk/muratcanko/SpaceGame/SpaceGame3D/assets/scripts/ScoreHandler.ts"],"names":["_decorator","Component","Label","Node","GameManager","GameState","ccclass","property","ScoreHandler","Number","elapsedTime","getScore","score","resetScore","update","dt","gameManager","currentState","GAME_RUNNING","incrementInterval","incrementScore","updateScoreLabel","console","log","scoreLabel","label","getComponent","string"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,I,OAAAA,I;;AACpCC,MAAAA,W,iBAAAA,W;AAAaC,MAAAA,S,iBAAAA,S;;;;;;;;;OAChB;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;8BAGjBQ,Y,WADZF,OAAO,CAAC,cAAD,C,UAELC,QAAQ;AAAA;AAAA,qC,UACRA,QAAQ,CAACJ,IAAD,C,UACRI,QAAQ,CAACE,MAAD,C,UACRF,QAAQ,CAACE,MAAD,C,2BALX,MACaD,YADb,SACkCP,SADlC,CAC4C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAIO;AAJP,eAMlCS,WANkC,GAMZ,CANY;AAAA;;AAQnCC,QAAAA,QAAQ,GAAG;AAChB,iBAAO,KAAKC,KAAZ;AACD;;AAEMC,QAAAA,UAAU,GAAG;AAClB,eAAKD,KAAL,GAAa,CAAb;AACA,iBAAO,KAAKA,KAAZ;AACD;;AAESE,QAAAA,MAAM,CAACC,EAAD,EAAa;AAC3B,cAAI,KAAKC,WAAL,CAAiBC,YAAjB,KAAkC;AAAA;AAAA,sCAAUC,YAAhD,EACE,KAAKR,WAAL,IAAoBK,EAApB;;AACF,cAAI,KAAKL,WAAL,IAAoB,KAAKS,iBAA7B,EAAgD;AAC9C,iBAAKT,WAAL,IAAoB,KAAKS,iBAAzB;AACA,iBAAKC,cAAL;AACA,iBAAKC,gBAAL;AACD;AACF;;AAEOD,QAAAA,cAAc,GAAG;AACvB,eAAKR,KAAL,IAAc,CAAd;AACAU,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB,KAAKX,KAA5B;AACD;;AAEOS,QAAAA,gBAAgB,GAAG;AACzB,cAAI,KAAKG,UAAT,EAAqB;AACnB,gBAAMC,KAAK,GAAG,KAAKD,UAAL,CAAgBE,YAAhB,CAA6BxB,KAA7B,CAAd;;AACA,gBAAIuB,KAAJ,EAAW;AACTA,cAAAA,KAAK,CAACE,MAAN,QAAkB,KAAKf,KAAvB;AACD;AACF;AACF;;AAvCyC,O;;;;;iBACQ,I;;;;;;;iBACf,I;;;;;;;iBACD,C;;;;;;;iBACY,C;;kCAsChD;AACA;AACA","sourcesContent":["import { _decorator, Component, Game, Label, Node } from \"cc\";\r\nimport { GameManager, GameState } from \"./GameManager\";\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass(\"ScoreHandler\")\r\nexport class ScoreHandler extends Component {\r\n  @property(GameManager) gameManager: GameManager = null;\r\n  @property(Node) scoreLabel: Node = null;\r\n  @property(Number) score: number = 0;\r\n  @property(Number) incrementInterval: number = 1; // İncrement aralığı (saniye)\r\n\r\n  private elapsedTime: number = 0;\r\n\r\n  public getScore() {\r\n    return this.score;\r\n  }\r\n\r\n  public resetScore() {\r\n    this.score = 0;\r\n    return this.score;\r\n  }\r\n\r\n  protected update(dt: number) {\r\n    if (this.gameManager.currentState === GameState.GAME_RUNNING)\r\n      this.elapsedTime += dt;\r\n    if (this.elapsedTime >= this.incrementInterval) {\r\n      this.elapsedTime -= this.incrementInterval;\r\n      this.incrementScore();\r\n      this.updateScoreLabel();\r\n    }\r\n  }\r\n\r\n  private incrementScore() {\r\n    this.score += 1;\r\n    console.log(\"Score: \", this.score);\r\n  }\r\n\r\n  private updateScoreLabel() {\r\n    if (this.scoreLabel) {\r\n      const label = this.scoreLabel.getComponent(Label);\r\n      if (label) {\r\n        label.string = `${this.score}`;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n//   public addScore(currentscore: number, value: number) {\r\n//     return (currentscore += value);\r\n//   }\r\n"]}