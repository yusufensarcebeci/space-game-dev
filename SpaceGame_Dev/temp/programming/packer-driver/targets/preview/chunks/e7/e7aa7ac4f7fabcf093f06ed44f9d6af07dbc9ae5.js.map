{"version":3,"sources":["file:///D:/CocosProjects/bionluk/muratcanko/SpaceGame/SpaceGame3D/assets/scripts/GameManager.ts"],"names":["_decorator","Component","Enum","ccclass","property","GameState","GameManager","type","start","setState","newState","currentState","handleStateChange","state","LOADING","onLoading","GAME_START","onGameStart","GAME_RUNNING","onGameRunning","GAME_OVER","onGameOver","console","log"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;;;;;;;;;OAC1B;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;;2BAElBK,S,0BAAAA,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;eAAAA,S;;;6BAQCC,W,WADZH,OAAO,CAAC,aAAD,C,UAELC,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAEL,IAAI,CAACG,SAAD;AAAZ,OAAD,C,2BAFX,MACaC,WADb,SACiCL,SADjC,CAC2C;AAAA;AAAA;;AAAA;AAAA;;AAK/BO,QAAAA,KAAK,GAAS,CACtB;AACD;;AAEDC,QAAAA,QAAQ,CAACC,QAAD,EAAsB;AAC5B,eAAKC,YAAL,GAAoBD,QAApB;AACA,eAAKE,iBAAL,CAAuBF,QAAvB;AACD;;AAEDE,QAAAA,iBAAiB,CAACC,KAAD,EAAmB;AAClC,kBAAQA,KAAR;AACE,iBAAKR,SAAS,CAACS,OAAf;AACE,mBAAKC,SAAL;AACA;;AACF,iBAAKV,SAAS,CAACW,UAAf;AACE,mBAAKC,WAAL;AACA;;AACF,iBAAKZ,SAAS,CAACa,YAAf;AACE,mBAAKC,aAAL;AACA;;AACF,iBAAKd,SAAS,CAACe,SAAf;AACE,mBAAKC,UAAL;AACA;AAZJ;AAcD;;AACDN,QAAAA,SAAS,GAAG;AACVO,UAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EADU,CAEV;AACD;;AAEDN,QAAAA,WAAW,GAAG;AACZK,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EADY,CAEZ;AACD;;AAEDJ,QAAAA,aAAa,GAAG;AACdG,UAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EADc,CAEd;AACD;;AAEDF,QAAAA,UAAU,GAAG;AACXC,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EADW,CAEX;AACD;;AAhDwC,O;;;;;iBAGflB,SAAS,CAACS,O","sourcesContent":["import { _decorator, Component, Enum, Node } from \"cc\";\r\nconst { ccclass, property } = _decorator;\r\n\r\nexport enum GameState {\r\n  LOADING,\r\n  GAME_START,\r\n  GAME_RUNNING,\r\n  GAME_OVER,\r\n}\r\n\r\n@ccclass(\"GameManager\")\r\nexport class GameManager extends Component {\r\n  @property({ type: Enum(GameState) })\r\n\r\n  currentState: GameState = GameState.LOADING;\r\n\r\n  protected start(): void {\r\n    // this.currentState = GameState.GAME_START;\r\n  }\r\n  \r\n  setState(newState: GameState) {\r\n    this.currentState = newState;\r\n    this.handleStateChange(newState);\r\n  }\r\n\r\n  handleStateChange(state: GameState) {\r\n    switch (state) {\r\n      case GameState.LOADING:\r\n        this.onLoading();\r\n        break;\r\n      case GameState.GAME_START:\r\n        this.onGameStart();\r\n        break;\r\n      case GameState.GAME_RUNNING:\r\n        this.onGameRunning();\r\n        break;\r\n      case GameState.GAME_OVER:\r\n        this.onGameOver();\r\n        break;\r\n    }\r\n  }\r\n  onLoading() {\r\n    console.log(\"Game is loading...\");\r\n    // Yükleme işlemleri burada yapılır\r\n  }\r\n\r\n  onGameStart() {\r\n    console.log(\"Game started!\");\r\n    // Oyun başlangıç işlemleri burada yapılır\r\n  }\r\n\r\n  onGameRunning() {\r\n    console.log(\"Game is running...\");\r\n    // Oyun devam ederken yapılacak işlemler burada yapılır\r\n  }\r\n\r\n  onGameOver() {\r\n    console.log(\"Game over.\");\r\n    // Oyun bittiğinde yapılacak işlemler burada yapılır\r\n  }\r\n}\r\n"]}