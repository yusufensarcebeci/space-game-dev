{"version":3,"sources":["file:///D:/CocosProjects/bionluk/muratcanko/SpaceGame/SpaceGame3D/assets/scripts/ColliderHandler.ts"],"names":["_decorator","Component","ccclass","property","ColliderManager","start","collider","getComponent","Collider","on","onCollisionEnter","onCollisionStay","onCollisionExit","event","console","log","otherCollider","node","name"],"mappings":";;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;;;;;;;;OACf;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBH,U;;iCAGjBI,e,WADZF,OAAO,CAAC,iBAAD,C,gBAAR,MACaE,eADb,SACqCH,SADrC,CAC+C;AAC3CI,QAAAA,KAAK,GAAG;AACJ,cAAMC,QAAQ,GAAG,KAAKC,YAAL,CAAkBC,QAAlB,CAAjB;;AACA,cAAIF,QAAJ,EAAc;AACV;AACAA,YAAAA,QAAQ,CAACG,EAAT,CAAY,kBAAZ,EAAgC,KAAKC,gBAArC,EAAuD,IAAvD,EAFU,CAGV;;AACAJ,YAAAA,QAAQ,CAACG,EAAT,CAAY,iBAAZ,EAA+B,KAAKE,eAApC,EAAqD,IAArD,EAJU,CAKV;;AACAL,YAAAA,QAAQ,CAACG,EAAT,CAAY,iBAAZ,EAA+B,KAAKG,eAApC,EAAqD,IAArD;AACH;AACJ;;AAEDF,QAAAA,gBAAgB,CAACG,KAAD,EAAyB;AACrCC,UAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCF,KAAK,CAACG,aAAN,CAAoBC,IAApB,CAAyBC,IAAjE;AACH;;AAEDP,QAAAA,eAAe,CAACE,KAAD,EAAyB;AACpCC,UAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCF,KAAK,CAACG,aAAN,CAAoBC,IAApB,CAAyBC,IAAjE;AACH;;AAEDN,QAAAA,eAAe,CAACC,KAAD,EAAyB;AACpCC,UAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCF,KAAK,CAACG,aAAN,CAAoBC,IAApB,CAAyBC,IAA/D;AACH;;AAvB0C,O","sourcesContent":["import { _decorator, Component, Node } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('ColliderManager')\r\nexport class ColliderManager extends Component {\r\n    start() {\r\n        const collider = this.getComponent(Collider);\r\n        if (collider) {\r\n            // Çarpışma başladığında tetiklenir\r\n            collider.on('onCollisionEnter', this.onCollisionEnter, this);\r\n            // Çarpışma devam ederken tetiklenir\r\n            collider.on('onCollisionStay', this.onCollisionStay, this);\r\n            // Çarpışma bittiğinde tetiklenir\r\n            collider.on('onCollisionExit', this.onCollisionExit, this);\r\n        }\r\n    }\r\n\r\n    onCollisionEnter(event: ICollisionEvent) {\r\n        console.log('Collision started with: ', event.otherCollider.node.name);\r\n    }\r\n\r\n    onCollisionStay(event: ICollisionEvent) {\r\n        console.log('Collision ongoing with: ', event.otherCollider.node.name);\r\n    }\r\n\r\n    onCollisionExit(event: ICollisionEvent) {\r\n        console.log('Collision ended with: ', event.otherCollider.node.name);\r\n    }\r\n}\r\n\r\n\r\n"]}