{"version":3,"sources":["file:///D:/CocosProjects/bionluk/muratcanko/SpaceGame/SpaceGame3D/assets/scripts/EnemyManager.ts"],"names":["_decorator","Component","instantiate","Prefab","randomRange","Vec3","GameManager","GameState","ccclass","property","EnemyManager","Number","activeEnemies","Set","spawnDepth","enemyPool","onLoad","initializeEnemyPool","i","poolSize","enemy","enemyPrefab","active","node","addChild","push","console","log","spawnAllEnemies","currentZ","spawnPos","spawnRangeX","spawnRangeY","setPosition","add","zOffset","returnEnemyToPool","delete","update","dt","gameManager","currentState","GAME_START"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACEA,MAAAA,U,OAAAA,U;AACAC,MAAAA,S,OAAAA,S;AACAC,MAAAA,W,OAAAA,W;AAEAC,MAAAA,M,OAAAA,M;AACAC,MAAAA,W,OAAAA,W;AACAC,MAAAA,I,OAAAA,I;;AAEOC,MAAAA,W,iBAAAA,W;AAAaC,MAAAA,S,iBAAAA,S;;;;;;;;;AAAkC;OAElD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBT,U;;8BAGjBU,Y,WADZF,OAAO,CAAC,cAAD,C,UAELC,QAAQ,CAACN,MAAD,C,UACRM,QAAQ,CAACE,MAAD,C,UACRF,QAAQ,CAACE,MAAD,C,UACRF,QAAQ,CAACE,MAAD,C,UACRF,QAAQ,CAACE,MAAD,C,UACRF,QAAQ,CAACE,MAAD,C,UACRF,QAAQ;AAAA;AAAA,qC,2BARX,MACaC,YADb,SACkCT,SADlC,CAC4C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eAS1CW,aAT0C,GASf,IAAIC,GAAJ,EATe;AAAA,eAU1CC,UAV0C,GAUrB,CAVqB;AAAA,eAYlCC,SAZkC,GAYd,EAZc;AAAA;;AAchCC,QAAAA,MAAM,GAAS,CACvB;AACA;AACD;;AAEOC,QAAAA,mBAAmB,GAAG;AAC5B,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,QAAzB,EAAmCD,CAAC,EAApC,EAAwC;AACtC,gBAAME,KAAK,GAAGlB,WAAW,CAAC,KAAKmB,WAAN,CAAzB;AACAD,YAAAA,KAAK,CAACE,MAAN,GAAe,KAAf;AACA,iBAAKC,IAAL,CAAUC,QAAV,CAAmBJ,KAAnB;AACA,iBAAKL,SAAL,CAAeU,IAAf,CAAoBL,KAApB;AACD;;AACDM,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,SAAjB;AACD;;AAEOa,QAAAA,eAAe,GAAG;AACxB,cAAIC,QAAQ,GAAG,KAAKf,UAApB;;AAEA,eAAK,IAAMM,KAAX,IAAoB,KAAKL,SAAzB,EAAoC;AAClC,gBAAMe,QAAQ,GAAG,IAAIzB,IAAJ,CACfD,WAAW,CAAC,CAAC,KAAK2B,WAAP,EAAoB,KAAKA,WAAzB,CADI,EAEf3B,WAAW,CAAC,CAAC,KAAK4B,WAAP,EAAoB,KAAKA,WAAzB,CAFI,EAGfH,QAHe,CAAjB;AAKAT,YAAAA,KAAK,CAACa,WAAN,CAAkBH,QAAlB;AACAV,YAAAA,KAAK,CAACE,MAAN,GAAe,IAAf;AACA,iBAAKV,aAAL,CAAmBsB,GAAnB,CAAuBd,KAAvB;AAEAS,YAAAA,QAAQ,IAAI,KAAKM,OAAjB,CAVkC,CAUR;AAC3B;AACF;;AAEDC,QAAAA,iBAAiB,CAAChB,KAAD,EAAc;AAC7BA,UAAAA,KAAK,CAACE,MAAN,GAAe,KAAf;AACA,eAAKV,aAAL,CAAmByB,MAAnB,CAA0BjB,KAA1B;AACA,eAAKL,SAAL,CAAeU,IAAf,CAAoBL,KAApB;AACD;;AAEDkB,QAAAA,MAAM,CAACC,EAAD,EAAa;AACjB,cAAI,KAAKC,WAAL,IAAoB,KAAKA,WAAL,CAAiBC,YAAjB,KAAkC;AAAA;AAAA,sCAAUC,UAApE,EAAgF,CAC9E;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACD;AACF;;AAhEyC,O;;;;;iBACF,I;;;;;;;iBACH,E;;;;;;;iBACG,C;;;;;;;iBACA,C;;;;;;;iBACF,C;;;;;;;iBACF,C;;;;;;;iBACc,I","sourcesContent":["import {\r\n  _decorator,\r\n  Component,\r\n  instantiate,\r\n  Node,\r\n  Prefab,\r\n  randomRange,\r\n  Vec3,\r\n} from \"cc\";\r\nimport { GameManager, GameState } from \"./GameManager\"; // GameManager ve GameState'i içe aktarıyoruz\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass(\"EnemyManager\")\r\nexport class EnemyManager extends Component {\r\n  @property(Prefab) enemyPrefab: Prefab = null;\r\n  @property(Number) poolSize: number = 10;\r\n  @property(Number) spawnRangeX: number = 1;\r\n  @property(Number) spawnRangeY: number = 1;\r\n  @property(Number) moveSpeed: number = 3;\r\n  @property(Number) zOffset: number = 2; \r\n  @property(GameManager) gameManager: GameManager = null; \r\n\r\n  activeEnemies: Set<Node> = new Set();\r\n  spawnDepth: number = 0;\r\n\r\n  private enemyPool: Node[] = [];\r\n\r\n  protected onLoad(): void {\r\n    // this.initializeEnemyPool();\r\n    // this.spawnAllEnemies();\r\n  }\r\n\r\n  private initializeEnemyPool() {\r\n    for (let i = 0; i < this.poolSize; i++) {\r\n      const enemy = instantiate(this.enemyPrefab);\r\n      enemy.active = false;\r\n      this.node.addChild(enemy);\r\n      this.enemyPool.push(enemy);\r\n    }\r\n    console.log(this.enemyPool);\r\n  }\r\n\r\n  private spawnAllEnemies() {\r\n    let currentZ = this.spawnDepth;\r\n\r\n    for (const enemy of this.enemyPool) {\r\n      const spawnPos = new Vec3(\r\n        randomRange(-this.spawnRangeX, this.spawnRangeX),\r\n        randomRange(-this.spawnRangeY, this.spawnRangeY),\r\n        currentZ\r\n      );\r\n      enemy.setPosition(spawnPos);\r\n      enemy.active = true;\r\n      this.activeEnemies.add(enemy);\r\n\r\n      currentZ -= this.zOffset; // Bir sonraki düşmanın z ekseninde -1 geride olmasını sağla\r\n    }\r\n  }\r\n\r\n  returnEnemyToPool(enemy: Node) {\r\n    enemy.active = false;\r\n    this.activeEnemies.delete(enemy);\r\n    this.enemyPool.push(enemy);\r\n  }\r\n\r\n  update(dt: number) {\r\n    if (this.gameManager && this.gameManager.currentState === GameState.GAME_START) {\r\n      // this.activeEnemies.forEach((enemy) => {\r\n      //   const position = enemy.getPosition();\r\n      //   position.z += this.moveSpeed * dt;\r\n      //   enemy.setPosition(position);\r\n\r\n      //   if (position.z > 2) {\r\n      //     this.returnEnemyToPool(enemy);\r\n      //   }\r\n      // });\r\n    }\r\n  }\r\n}\r\n"]}