{"version":3,"sources":["file:///D:/CocosProjects/bionluk/muratcanko/SpaceGame/SpaceGame3D/assets/scripts/SceneFrame.ts"],"names":["_decorator","Component","instantiate","Prefab","Vec3","GameManager","GameState","ccclass","property","SceneFrame","Number","framePool","maxZ","initialized","onLoad","initializeFramePool","spawnAllFrame","i","poolSize","frame","framePrefab","active","node","addChild","push","positionZ","forEach","setPosition","zOffset","Math","abs","resetFrame","max","map","f","getPosition","z","newPositionZ","getFarthestFrameZ","min","update","dt","gameManager","currentState","GAME_START","position","moveSpeed"],"mappings":"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","sourcesContent":["import {\r\n    _decorator,\r\n    Component,\r\n    instantiate,\r\n    Node,\r\n    Prefab,\r\n    Vec3,\r\n  } from \"cc\";\r\n  import { GameManager, GameState } from \"./GameManager\";\r\n  const { ccclass, property } = _decorator;\r\n  \r\n  @ccclass(\"SceneFrame\")\r\n  export class SceneFrame extends Component {\r\n    @property(GameManager) gameManager: GameManager = null;\r\n    @property(Prefab) framePrefab: Prefab = null;\r\n  \r\n    @property(Number) poolSize: number = null;\r\n    @property(Number) zOffset: number = null;\r\n    @property(Number) moveSpeed: number = null;\r\n  \r\n    private framePool: Node[] = [];\r\n    private maxZ: number = 0;\r\n    private initialized: boolean = false;\r\n  \r\n    protected onLoad(): void {\r\n      this.initializeFramePool();\r\n      this.spawnAllFrame();\r\n    }\r\n  \r\n    private initializeFramePool() {\r\n      for (let i = 0; i < this.poolSize; i++) {\r\n        const frame = instantiate(this.framePrefab);\r\n        frame.active = true;\r\n        this.node.addChild(frame);\r\n        this.framePool.push(frame);\r\n      }\r\n    }\r\n  \r\n    private spawnAllFrame() {\r\n      let positionZ = -20;\r\n      this.framePool.forEach((frame) => {\r\n        frame.setPosition(new Vec3(0, 0, positionZ));\r\n        positionZ -= this.zOffset;\r\n      });\r\n      this.maxZ = Math.abs(positionZ);  \r\n    }\r\n  \r\n    private resetFrame(frame: Node) {\r\n      if (!this.initialized) {\r\n        this.maxZ = Math.max(...this.framePool.map((f) => f.getPosition().z));\r\n        this.initialized = true;\r\n      }\r\n  \r\n      const newPositionZ = this.getFarthestFrameZ() - this.zOffset; // En uzak frame'in Z pozisyonunu referans alarak yeni pozisyonu belirle\r\n      frame.setPosition(new Vec3(0, 0, newPositionZ));\r\n    }\r\n  \r\n    private getFarthestFrameZ(): number {\r\n      // Sahnedeki en uzak frame'in Z pozisyonunu bulur\r\n      return Math.min(...this.framePool.map((frame) => frame.getPosition().z));\r\n    }\r\n  \r\n    protected update(dt: number): void {\r\n      if (this.gameManager && this.gameManager.currentState === GameState.GAME_START) {\r\n        this.framePool.forEach((frame) => {\r\n          const position = frame.getPosition();\r\n          position.z += this.moveSpeed * dt;\r\n          frame.setPosition(position);\r\n  \r\n          if (position.z > 0) {\r\n            this.resetFrame(frame);  // Frame'i sahnenin en gerisine resetle\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n  "]}