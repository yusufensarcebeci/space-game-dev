{"version":3,"sources":["file:///D:/CocosProjects/bionluk/muratcanko/SpaceGame/SpaceGame3D/assets/scripts/UIManager.ts"],"names":["_decorator","Component","Node","gameEventTarget","ccclass","property","UIManager","onLoad","registerEvents","onPlayButtonClicked","console","log","emit","scheduleOnce","on","handleLoading","handleInitScreen","handleGameScreen","handleEndScreen","hideAllScreens","loadingScreen","active","initScreen","gameScreen","endScreen","rotateLoadSprite","dt","rotZ","load","eulerAngles","z","setRotationFromEuler","update","activity"],"mappings":"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","sourcesContent":["import { _decorator, Component, Game, Node } from \"cc\";\r\nimport { gameEventTarget, GameState } from \"./GameManager\";\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass(\"UIManager\")\r\nexport class UIManager extends Component {\r\n  @property(Node) loadingScreen: Node = null;\r\n  @property(Node) initScreen: Node = null;\r\n  @property(Node) gameScreen: Node = null;\r\n  @property(Node) endScreen: Node = null;\r\n  @property(Node) load: Node = null;\r\n\r\n  onLoad() {\r\n    this.registerEvents();\r\n  }\r\n\r\n  private onPlayButtonClicked() {\r\n      console.log(\"Play button clicked\");\r\n      gameEventTarget.emit(\"loading\"); // Oyunu LOADING durumuna geçirir\r\n      this.scheduleOnce(() => {\r\n          gameEventTarget.emit(\"game_start\"); // 2 saniye sonra GAME_START durumuna geçer\r\n          gameEventTarget.emit(\"play_button_clicked\");\r\n    }, 2);\r\n  }\r\n\r\n  registerEvents() {\r\n    gameEventTarget.on(\"loading\", this.handleLoading, this);\r\n    gameEventTarget.on(\"init\", this.handleInitScreen, this);\r\n    gameEventTarget.on(\"game_start\", this.handleGameScreen, this);\r\n    gameEventTarget.on(\"game_over\", this.handleEndScreen, this);\r\n  }\r\n\r\n  handleLoading() {\r\n    this.hideAllScreens();\r\n    if (this.loadingScreen) {\r\n      this.loadingScreen.active = true;\r\n    }\r\n  }\r\n\r\n  handleInitScreen() {\r\n    this.hideAllScreens();\r\n    if (this.initScreen) {\r\n      this.initScreen.active = true;\r\n    }\r\n  }\r\n\r\n  handleGameScreen() {\r\n    this.hideAllScreens();\r\n    if (this.gameScreen) {\r\n      this.gameScreen.active = true;\r\n    }\r\n  }\r\n\r\n  handleEndScreen() {\r\n    this.hideAllScreens();\r\n    if (this.endScreen) {\r\n      this.endScreen.active = true;\r\n    }\r\n  }\r\n\r\n  private hideAllScreens() {\r\n    if (this.loadingScreen) this.loadingScreen.active = false;\r\n    if (this.initScreen) this.initScreen.active = false;\r\n    if (this.gameScreen) this.gameScreen.active = false;\r\n    if (this.endScreen) this.endScreen.active = false;\r\n  }\r\n\r\n  private rotateLoadSprite(dt: number) {\r\n    let rotZ = this.load.eulerAngles.z;\r\n    this.load.setRotationFromEuler(0, 0, rotZ - dt * 200);\r\n  }\r\n\r\n  protected update(dt: number): void {\r\n    let activity = this.loadingScreen.active;\r\n    if (activity) {\r\n      this.rotateLoadSprite(dt);\r\n    }\r\n  }\r\n}\r\n"]}